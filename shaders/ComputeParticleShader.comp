#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout( binding=0 ) buffer Pos
{
	vec4 Positions[];
};

layout(binding = 1) buffer Vel
{
    vec4 Velocities[];
};

layout( local_size_x = 128, local_size_y = 1, local_size_z = 1 ) in;

uniform vec2 ShootIndex;

float time = 0.0f;
float lifetime = 1.0f;

void main(void)
{
    const float DT = 0.1;
    const vec3 G = vec3(0.0, -0.0098, 0.0);

	uint gid = gl_GlobalInvocationID.x;

    float life = Velocities[gid].w;

    if ((gid < ShootIndex.y && gid == ShootIndex.x) || life > lifetime)
    {
        life += DT;

        vec3 p = Positions[gid].xyz;
        vec3 v = Velocities[gid].xyz;

        v += G * DT;

        p += 0.001 * vec3(0.1, 0.1, 0.1) + v * DT;

        Positions[gid].xyz = p;
        Velocities[gid].xyz = v;
        Velocities[gid].w = life;
    }
    else
    {
        life = 0.0f;

        Velocities[gid].w = life;
    }
}